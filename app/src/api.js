import axios from "axios";
import { BASE_URL } from "./Constants";
// This file contains all api calls from frontend to backend

/**
 *
 * @returns lists of sidebar
 */
export async function getList() {
  const response = await axios(`${BASE_URL}/list`);
  return response;
}

/**
 *
 * @param {String} listUUID  It is the pathName of list (unique identity)
 * @returns metadata of list where metadata is listName, pathName and deletable property
 */
export async function getListData(listUUID) {
  const response = await axios.get(`${BASE_URL}/list/${listUUID}`);
  return response;
}

/**
 *
 * @param {String} sidebarTaskListName  It is the name of sidebar list
 * @returns sidebar list that is manually generated by user
 */
export async function addSidebarList(sidebarTaskListName) {
  const response = await axios.get(`${BASE_URL}/add_list`, {
    params: {
      sidebarTaskListName,
    },
  });
  return response;
}

/**
 *
 * @param {Number} listIndex  It is the index of a particular list in user generated sidebar list
 * @returns sidebar list that is manually generated by user after deletion
 */
export async function deleteSidebarList(listIndex) {
  const response = await axios.get(`${BASE_URL}/delete_list`, {
    params: {
      listIndex: JSON.stringify(listIndex),
    },
  });
  return response;
}

/**
 *
 * @param {String} inputTask  Text of task which is typed before pressing enter in input field
 * @param {String} currentListUUID  pathName (unique identity) of current open list in which tasks are being added
 * @returns list of tasks of that particular sidebar list after adding new task
 */
export async function addTask(inputTask, currentListUUID) {
  const response = await axios.get(`${BASE_URL}/create_task`, {
    params: {
      currentListUUID,
      inputTask,
    },
  });
  return response;
}

/**
 *
 * @param {Number} taskIndex  Index of that particular task in task list which text will be updated
 * @param {String} currentListUUID  pathName of currently open list(unique identity)
 * @param {String} newInnerText  new text of task
 * @returns list of task of that particular sidebar list after changing text
 */
export async function updateTask(taskIndex, currentListUUID, newInnerText) {
  const response = await axios.get(`${BASE_URL}/update_task`, {
    params: {
      taskIndex: JSON.stringify(taskIndex),
      currentListUUID,
      newInnerText,
    },
  });
  return response;
}

/**
 *
 * @param {Number} taskIndex  index of task which will be going to delete
 * @param {String} currentListUUID  pathName of currently open list(unique identity)
 * @param {Object} taskInfo  information of task having uuid(unique identity), text, originated date and done property
 * @returns list of task of that particular sidebar list after deleting task
 */
export async function deleteTask(taskIndex, currentListUUID, taskInfo) {
  const response = await axios.get(`${BASE_URL}/delete_task`, {
    params: {
      taskIndex: JSON.stringify(taskIndex),
      taskInfo: JSON.stringify(taskInfo),
      currentListUUID,
    },
  });
  return response;
}

/**
 *
 * @param {Number} taskIndex  index of that particular task whose done property will be changed
 * @param {Object} taskInfo  information of task having uuid(unique identity), text, originated date and done property
 * @param {String} currentListUUID  pathName of currently open list(unique identity)
 * @returns list of task of that particular sidebar list with changed done property
 */
export async function setTaskDone(taskIndex, taskInfo, currentListUUID) {
  const response = await axios.get(`${BASE_URL}/task_done`, {
    params: {
      taskIndex: JSON.stringify(taskIndex),
      taskInfo: JSON.stringify(taskInfo),
      currentListUUID,
    },
  });
  return response;
}

/**
 *
 * @param {Number} objectIndex  index of the object having pathName of the list to which task came from
 * @returns tasks of Recycle Bin after restoring task to originated list
 */
export async function restoreTaskFromRecycleBin(objectIndex) {
  const response = await axios(`${BASE_URL}/restore_task`, {
    params: {
      objectIndex: JSON.stringify(objectIndex),
    },
  });
  return response;
}

/**
 *
 * @param {*} objectIndex  index of the object having pathName of the list to which task came from
 * @returns tasks of Recycle Bin after deleting task
 */
export async function deleteTaskFromRecycleBin(objectIndex) {
  const response = await axios.get(`${BASE_URL}/permanent_deletion`, {
    params: {
      objectIndex: JSON.stringify(objectIndex),
    },
  });
  return response;
}
